<?php
// auto-generated by sfPropelCrud
// date: 2009/01/01 18:26:05
?>
<?php

/**
 * tag actions.
 *
 * @package    sf_sandbox
 * @subpackage tag
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class tagActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('tag', 'list');
  }

  public function executeList()
  {
    $this->tags = TagPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $c = new Criteria();
    $c->add(TagPeer::STRIPPED_TAG, $this->getRequestParameter('stripped_tag'));
    $this->tag = TagPeer::doSelectOne($c);
    
    $this->forward404Unless($this->tag);
   
    $counts = UserToTagPeer::getCountOfLovers($this->tag->getId());
    
    $this->lovers = array();
    if ( sizeof($counts) )
    {
      $this->lovers = UserPeer::getLovers($counts, $this->tag->getID());
    }
    
    $response = $this->getContext()->getResponse();
    $response->addJavascript('tools');
    $this->comments = CommentPeer::getCommentsJoinUserWithDepth($this->tag->getId());
    
    $this->token = myTools::generate_random_key();
    $this->setFlash('token', $this->token);
  }

  public function executeCreate()
  {
    $this->tag = new Tag();
   
    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->tag = TagPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->tag);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $tag = new Tag();
    }
    else
    {
      $tag = TagPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($tag);
    }

    $tag->setId($this->getRequestParameter('id'));
    $tag->setTag($this->getRequestParameter('tag'));
    $tag->setStrippedTag($this->getRequestParameter('stripped_tag'));
    $tag->setCreatedBy($this->getRequestParameter('created_by'));

    $tag->save();

    return $this->redirect('tag/show?id='.$tag->getId());
  }

  public function executeDelete()
  {
    $tag = TagPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($tag);

    $tag->delete();

    return $this->redirect('tag/list');
  }
  
}
